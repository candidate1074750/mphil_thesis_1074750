---
st---
title: "v2 2024.05.15 analysis"
format: html
editor: visual
---

# 2024.05.23 HILDA analysis

## 0: Set up.

### 0.1 Clearing environment, setting WD, loading packages.

```{r}

# Clearing environment.
rm(list=ls())

# Setting working directory and confirming.
setwd("/Users/simoncooper/Documents/Ox Dissertation/analysis/HILDA/combined_files")
getwd()

# Calling relevant packages.
if (!require("pacman")) install.packages("pacman")
pacman::p_load(AER, car, catregs, emmeans, fixest, fmsb, here, khb, lattice, lme4, lmtest, marginaleffects, margins, Matrix, modelsummary, nlstools, plm, tidyverse, estimatr, rdrobust, haven, labelled, dagitty, rddensity, knitr, kableExtra, stargazer, broom, eeptools, panelr, plm, zoo, MatchIt, twang, WeightIt, haven, dpm, ggplot2, nlme, MuMIn, RStata, readxl, glmnet, randomForest, DoubleML, mlr3, mlr3learners, mlr3tuning, data.table, sjlabelled, ranger, tidyr, ggplot2, dplyr, readxl, optmatch)

```

### 0.2 Loading HILDA data.

```{r}

# Load data.
load("hilda_2.RData")

# Confirm panel data structure.
hilda_2 <- panel_data(hilda_2, id = xwaveid, wave = wave)

# Preparing weights.
hilda_2 <- hilda_2 %>%
  group_by(xwaveid) %>%
  filter(lnwtrp != -10) %>%
  ungroup()

View(hilda_2)

```

### 0.3 Creating gay, lesbian, queer man, queer woman indicator variables, additional covariates, disposable income variable.

```{r}

hilda_2 <- hilda_2 %>%
  mutate(gay = ifelse(sexor_det == 2, 1, 0)) %>%
  mutate(lesbian = ifelse(sexor_det == 3, 1, 0)) %>%
  mutate(q_man = ifelse(sexor_binary_2 == 1 & female == 0, 1, 0)) %>%
  mutate(q_woman = ifelse(sexor_binary_2 == 1 & female == 1, 1, 0))

hilda_2$gay[is.na(hilda_2$gay)] <- 0
hilda_2$lesbian[is.na(hilda_2$lesbian)] <- 0

summary(hilda_2$gay)
summary(hilda_2$lesbian)
summary(hilda_2$q_man)
summary(hilda_2$q_woman)

# Additional variables.

# Coarser urban/rural.
summary(hilda_2$hhsos)
summary(hilda_2$hhssos)

hilda_2$hhssos[hilda_2$hhssos <= 0] <- 0 # Removing negative values.
summary(hilda_2$hhssos)

# Married.
summary(hilda_2$mrcms)
hilda_2$married <- 5
hilda_2$married[hilda_2$mrcms == 1] <- 1
hilda_2$married[hilda_2$mrcms != 1] <- 0
summary(hilda_2$married)

# Immigrant.
hilda_2$ancob
hilda_2 <- hilda_2 %>%
  mutate(immigrant = ifelse(ancob != 1101, 1, 0))
summary(hilda_2$immigrant)

# English fluency.
hilda_2$aneab
hilda_2$fluent_english <- 5
hilda_2$fluent_english[hilda_2$aneab != 3 & hilda_2$aneab != 4] <- 1
hilda_2$fluent_english[hilda_2$aneab == 3 | hilda_2$aneab == 4] <- 0
summary(hilda_2$fluent_english)

# Making updated income variable.

# Looking at disposable income variable.
summary(hilda_2$tifditp)
hist(hilda_2$tifditp)

# Want to address this skew in a way that can account for zeros, so I use an inverse hyperbolic sine transformation.
hilda_2$disp_inc <- asinh(hilda_2$tifditp)
hilda_2$disp_inc <- hilda_2$disp_inc - mean(hilda_2$disp_inc)
hist(hilda_2$disp_inc) # Skew looks better!

# For descriptive statistics, disp_inc that isn't transformed.
hilda_2$disp_inc_2 <- hilda_2$tifditp
summary(hilda_2$disp_inc_2)

summary(hilda_2$wave)
n_distinct(hilda_2$wave)
hilda_2$wave_2 <- hilda_2$wave - 11
summary(hilda_2$wave_2)


# Confirming/making new variables for descriptive statistics.
summary(hilda_2$helth)
summary(hilda_2$ed_degree)

hilda_2 <- hilda_2 %>%
  mutate(ed_hs = ifelse(edhigh1 %in% c(1, 2, 3, 4, 5, 8), 1, 0)) %>%
  mutate(urban = ifelse(hhsos %in% c(0, 1), 1, 0))

summary(hilda_2$ed_hs)
summary(hilda_2$urban)

# Rural/urban.
summary(hilda_2$hhsos)

# Socioeconomic index.
hilda_2$hhad10 # Decile index of relative socioeconomic (dis)advantage. 
hilda_2$hhec10 # Decile index of economic resources.

table(hilda_2$hhad10)
hilda_2$soc_ad <- hilda_2$hhad10
hilda_2$soc_ad[hilda_2$hhad10 < 1] <- 1
table(hilda_2$soc_ad)

table(hilda_2$hhec10)
hilda_2$econ_ad <- hilda_2$hhec10
hilda_2$econ_ad[hilda_2$hhec10 < 1] <- 1
table(hilda_2$econ_ad)



```

### 0.4 Making poverty variable.

```{r}

# Convert household ID variable to numeric.
hilda_2$hhrhid <- as.numeric(hilda_2$hhrhid)

# Count number of income units in each household.
hilda_2 <- hilda_2 %>%
  group_by(wave, hhrhid) %>%
  mutate(num_inc_units = n_distinct(hhiu)) %>%
  ungroup()

summary(hilda_2$num_inc_units) # Just one income unit per household on average.

# Count number of people in each income unit in each household.
hilda_2 <- hilda_2 %>%
  group_by(hhrhid, wave, hhiu) %>%
  mutate(potential_earners = n_distinct(xwaveid)) %>%
  ungroup()

summary(hilda_2$potential_earners) # Number of people in shared income unit. Note: this data starts at 26, so no dependent children will be included in the income unit.

# As a proxy for dependent children, I use the number of own resident children.
# For couples, I take the higher value of number of own resident children.
# For individuals, I use the existing value for number of own resident children.
hilda_2 <- hilda_2 %>%
  group_by(wave, hhrhid, hhiu) %>%
  mutate(inc_unit_size = max(tcr) + potential_earners)

summary(hilda_2$inc_unit_size) # Just confirming results! Looks good.

# Identifying total disposable income per income unit.
hilda_2 <- hilda_2 %>%
  group_by(hhrhid, wave, hhiu) %>%
  mutate(total_disp_inc = sum(tifditp, na.rm = TRUE)) 

summary(hilda_2$total_disp_inc)

# Creating a variable that equals 1 if someone is coupled and 0 if not.
summary(hilda_2$mrcms)

# Marital status.
hilda_2$mar_stat <- hilda_2$mrcms
hilda_2$mar_stat[hilda_2$mrcms <= 0] <- 0
summary(hilda_2$mar_stat)

# Coupled.
hilda_2$coupled <- 5
hilda_2$coupled[hilda_2$mar_stat == 1 | hilda_2$mar_stat == 5] <- 1
hilda_2$coupled[hilda_2$mar_stat != 1 & hilda_2$mar_stat != 5] <- 0
summary(hilda_2$coupled)

# Create poverty line variable based on income units.
aus_poverty <- read_excel("aus_poverty_lines.xlsx")
View(aus_poverty)

summary(hilda_2$coupled)
summary(hilda_2$inc_unit_size)
summary(aus_poverty$coupled)
summary(aus_poverty$inc_unit_size)

hilda_2 <- left_join(hilda_2, aus_poverty, by = c("wave", "coupled", "inc_unit_size"))

summary(hilda_2$poverty_line) # Yay, it worked!
summary(hilda_2$annualized_PL)

# Now, creating a variable for whether a person is above or below the poverty line.

hilda_2 <- hilda_2 %>%
  mutate(in_poverty = ifelse(total_disp_inc <= annualized_PL, 1, 0))

table(hilda_2$in_poverty)

table(hilda_2$in_poverty, hilda_2$ever_lgb)
prop.table(table(hilda_2$in_poverty, hilda_2$ever_lgb))

aggregate(hilda_2$in_poverty, by = list(hilda_2$ever_lgb), FUN = mean) # Poverty rate among LGB people actually seems to be a bit lower.

```

### 0.5 Preparing additional covariates.

```{r}

# Coarser urban/rural.
summary(hilda_2$hhsos)
summary(hilda_2$hhssos)

hilda_2$hhssos[hilda_2$hhssos <= 0] <- 0 # Removing negative values.
summary(hilda_2$hhssos)

# Married.
summary(hilda_2$mrcms)
hilda_2$married <- 5
hilda_2$married[hilda_2$mrcms == 1] <- 1
hilda_2$married[hilda_2$mrcms != 1] <- 0
summary(hilda_2$married)

# Immigrant.
hilda_2$ancob
hilda_2 <- hilda_2 %>%
  mutate(immigrant = ifelse(ancob != 1101, 1, 0))
summary(hilda_2$immigrant)

# English fluency.
hilda_2$aneab
hilda_2$fluent_english <- 5
hilda_2$fluent_english[hilda_2$aneab != 3 & hilda_2$aneab != 4] <- 1
hilda_2$fluent_english[hilda_2$aneab == 3 | hilda_2$aneab == 4] <- 0
summary(hilda_2$fluent_english)

```

### 0.6 Saving results in R and Stata format.

```{r}

save(hilda_2, file = "hilda_2.Rdata")

# Remove variables with ".x" or ".y" in their names
hilda_2 <- hilda_2[, !grepl("\\.x$|\\.y$", names(hilda_2))]
ls(hilda_2)

haven::write_dta(hilda_2, "hilda_2.dta")

```

Clearing environment and reloading data.

```{r}

rm(list=ls())
load("hilda_2.RData")

```

## 
